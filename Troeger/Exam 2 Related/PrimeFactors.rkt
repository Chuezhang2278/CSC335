(define (PrimeFactors number)
  (define (factor divisor number)
    (display divisor)(newline)
    (if (> (* divisor divisor) number)
        (list number)
        (if (= (modulo number divisor) 0)
            (cons divisor (factor divisor (/ number divisor)))
            (factor (+ divisor 1) number))))
  (factor 2 number))
 
(define (filter lis)
  (define (get lis component)
    (cond ((null? lis) lis)
          ((= (car lis) component) (cons (car lis) (get (cdr lis) component)))
          (else (get (cdr lis) component))))
  (define (remove lis component)
    (cond ((null? lis) lis)
          ((= (car lis) component) (remove (cdr lis) component))
          (else (cons (car lis) (remove (cdr lis) component)))))
  (cond ((null? lis) lis)
        (else (cons (list (car (get lis (car lis))) (length (get lis (car lis))))  (filter (remove lis (car lis)))))))

(filter (PrimeFactors 1024))